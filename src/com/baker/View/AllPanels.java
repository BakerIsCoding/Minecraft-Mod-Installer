/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.baker.View;

import com.baker.Requests.DownloadFile;
import com.baker.Requests.RequestGet;
import com.baker.Requests.RequestPost;
import com.baker.simpleExceptions.SimpleException;
import com.baker.utils.FileFolderManager;
import com.baker.utils.HardwareInfoGetter;
import com.baker.utils.Popups;
import com.baker.utils.TypesChangers;
import com.baker.utils.ZipManager;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.io.File;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.Popup;
import javax.swing.plaf.basic.BasicFileChooserUI;
import org.json.JSONObject;

/**
 *
 * @author Baker
 */
public class AllPanels extends javax.swing.JPanel {

    private int mouseX, mouseY;
    private String domain = "http://127.0.0.1";
    //private String apikey = "API-EpVsPsKvqYhhcGKEeSNnWrZ1N5loZWlVK9iuumEP6wYsFBUUq6Ql";
    private String apikey = "API-gDjlVTn76N2ZpbaE8yuoVSgoOwGnXCHJJa7vMQOp";
    Popups popup = new Popups();
    HardwareInfoGetter hardware = new HardwareInfoGetter();

    /**
     * Creates new form UserInfoPanel
     *
     * @param allUserData
     * @param authToken
     * @throws com.baker.simpleExceptions.SimpleException
     */
    public AllPanels() {
        HardwareInfoGetter hardware = new HardwareInfoGetter();

        initComponents();
        setDefaultInfo();
        //Set Text Area
        pcInfoTextArea.setText(hardware.getSystemInfo());
        pcInfoTextArea.setEditable(false);

        // Set size and location
        setSize(750, 545);
        setLocation(0, 0);

        try {
            userStatsPanel();
        } catch (SimpleException e) {
            System.out.println("error " + e.getMessage());
        }
        addMouseListener(new MouseAdapter() {
            public void mousePressed(MouseEvent e) {
                mouseX = e.getX();
                mouseY = e.getY();
            }
        });

        addMouseMotionListener(new MouseAdapter() {
            public void mouseDragged(MouseEvent e) {
                int x = e.getXOnScreen() - mouseX;
                int y = e.getYOnScreen() - mouseY;
                setLocation(x, y);
            }
        });

        System.out.println("Started!");

    }

    private void setDefaultInfo() {
        try {
            if (hardware.getOsType() == 0) {
                String appDataPath = System.getenv("APPDATA");
                String minecraftModsPath = appDataPath + File.separator + ".minecraft" + File.separator + "mods";

                File modsFolder = new File(minecraftModsPath);

                if (!modsFolder.exists()) {
                    // Intentar crear la carpeta si no existe
                    boolean wasCreated = modsFolder.mkdirs();
                    if (!wasCreated) {
                        popup.errorPopup("Error", "No se pudo crear la carpeta de mods.");
                    }
                }

                if (modsFolder.exists() && modsFolder.isDirectory()) {
                    modRoute.setText(minecraftModsPath);
                } else {
                    modRoute.setText("");
                }
            }

            String currentPath = System.getProperty("user.dir");

            String downloadsPath = currentPath + File.separator + "downloaded";
            downloadZipModRoute.setText(downloadsPath);
        } catch (Exception e) {
            popup.errorPopup("Error", e.getMessage());
        }

    }

    private void userStatsPanel() throws SimpleException {
        userInfoWriteOnLabels();

    }

    private void userInfoWriteOnLabels() throws SimpleException {

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        graphicBtnGroup = new javax.swing.ButtonGroup();
        AllPanels = new com.baker.View.Components.MaterialTabbed();
        modsPanel = new javax.swing.JPanel();
        jSeparator1 = new javax.swing.JSeparator();
        rutaDescargaLabel = new javax.swing.JLabel();
        downloadZipModRoute = new javax.swing.JTextField();
        searchZipModButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        modRoute = new javax.swing.JTextField();
        searchModButton = new javax.swing.JButton();
        downloadButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        progressBar = new javax.swing.JProgressBar();
        shadersPanel = new javax.swing.JPanel();
        MainTitle = new javax.swing.JLabel();
        configPanel = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        graphicSetHigh = new javax.swing.JRadioButton();
        graphicSetMid = new javax.swing.JRadioButton();
        graphicSetLow = new javax.swing.JRadioButton();
        pcInfo = new javax.swing.JPanel();
        ScrollPane = new javax.swing.JScrollPane();
        pcInfoTextArea = new javax.swing.JTextArea();
        MainTitle1 = new javax.swing.JLabel();

        graphicSetMid.setSelected(true);

        graphicBtnGroup.add(graphicSetHigh);
        graphicBtnGroup.add(graphicSetMid);
        graphicBtnGroup.add(graphicSetLow);

        AllPanels.setBackground(new java.awt.Color(62, 62, 62));
        AllPanels.setForeground(new java.awt.Color(255, 255, 255));
        AllPanels.setToolTipText("");

        jSeparator1.setForeground(new java.awt.Color(155, 216, 184));
        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        rutaDescargaLabel.setText("Ruta de descarga de los mods");

        downloadZipModRoute.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                downloadZipModRouteActionPerformed(evt);
            }
        });

        searchZipModButton.setText("Explorar");
        searchZipModButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchZipModButtonActionPerformed(evt);
            }
        });

        jLabel1.setText("Carpeta de Mods:");

        modRoute.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modRouteActionPerformed(evt);
            }
        });

        searchModButton.setText("Explorar");
        searchModButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchModButtonActionPerformed(evt);
            }
        });

        downloadButton.setText("Descargar");
        downloadButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                downloadButtonMouseClicked(evt);
            }
        });

        jLabel2.setText("Mod Downloader");

        jCheckBox1.setText("Descomprimir Mods");

        jCheckBox2.setText("Instalar Mods");

        javax.swing.GroupLayout modsPanelLayout = new javax.swing.GroupLayout(modsPanel);
        modsPanel.setLayout(modsPanelLayout);
        modsPanelLayout.setHorizontalGroup(
            modsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, modsPanelLayout.createSequentialGroup()
                .addGroup(modsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(modsPanelLayout.createSequentialGroup()
                        .addGroup(modsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(modsPanelLayout.createSequentialGroup()
                                .addGap(199, 199, 199)
                                .addComponent(jLabel2))
                            .addGroup(modsPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(modsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addGroup(modsPanelLayout.createSequentialGroup()
                                        .addGroup(modsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(modsPanelLayout.createSequentialGroup()
                                                .addComponent(rutaDescargaLabel)
                                                .addGap(0, 236, Short.MAX_VALUE))
                                            .addComponent(modRoute)
                                            .addComponent(downloadZipModRoute))
                                        .addGap(18, 18, 18)
                                        .addGroup(modsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(searchModButton)
                                            .addComponent(searchZipModButton)))))
                            .addGroup(modsPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(modsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jCheckBox2)
                                    .addComponent(jCheckBox1))))
                        .addGap(18, 18, 18))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, modsPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(progressBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                    .addGroup(modsPanelLayout.createSequentialGroup()
                        .addGap(205, 205, 205)
                        .addComponent(downloadButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(247, 247, 247))
        );
        modsPanelLayout.setVerticalGroup(
            modsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(modsPanelLayout.createSequentialGroup()
                .addComponent(jSeparator1, javax.swing.GroupLayout.DEFAULT_SIZE, 417, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(modsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(modsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(modsPanelLayout.createSequentialGroup()
                        .addComponent(modRoute, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(rutaDescargaLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(downloadZipModRoute, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(modsPanelLayout.createSequentialGroup()
                        .addComponent(searchModButton)
                        .addGap(40, 40, 40)
                        .addComponent(searchZipModButton)))
                .addGap(53, 53, 53)
                .addComponent(jCheckBox1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBox2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(progressBar, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(downloadButton)
                .addGap(49, 49, 49))
        );

        AllPanels.addTab("Mods", modsPanel);

        shadersPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                ax(evt);
            }
        });

        MainTitle.setFont(new java.awt.Font("Segoe UI", 3, 18)); // NOI18N
        MainTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        MainTitle.setText("PANEL 2");

        javax.swing.GroupLayout shadersPanelLayout = new javax.swing.GroupLayout(shadersPanel);
        shadersPanel.setLayout(shadersPanelLayout);
        shadersPanelLayout.setHorizontalGroup(
            shadersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MainTitle, javax.swing.GroupLayout.DEFAULT_SIZE, 783, Short.MAX_VALUE)
        );
        shadersPanelLayout.setVerticalGroup(
            shadersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(shadersPanelLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(MainTitle)
                .addContainerGap(385, Short.MAX_VALUE))
        );

        AllPanels.addTab("Shaders", shadersPanel);

        jLabel3.setFont(new java.awt.Font("Sahadeva", 3, 18)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Distant Horizons");
        jLabel3.setMaximumSize(new java.awt.Dimension(84, 22));
        jLabel3.setMinimumSize(new java.awt.Dimension(84, 22));
        jLabel3.setPreferredSize(new java.awt.Dimension(84, 22));

        graphicSetHigh.setText("Graficos Altos");
        graphicSetHigh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                graphicSetHighActionPerformed(evt);
            }
        });

        graphicSetMid.setText("Graficos Medios");

        graphicSetLow.setText("Grafico Bajos");

        javax.swing.GroupLayout configPanelLayout = new javax.swing.GroupLayout(configPanel);
        configPanel.setLayout(configPanelLayout);
        configPanelLayout.setHorizontalGroup(
            configPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(configPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 770, Short.MAX_VALUE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, configPanelLayout.createSequentialGroup()
                .addContainerGap(25, Short.MAX_VALUE)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 733, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25))
            .addGroup(configPanelLayout.createSequentialGroup()
                .addGap(223, 223, 223)
                .addComponent(graphicSetHigh)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(graphicSetMid)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(graphicSetLow)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        configPanelLayout.setVerticalGroup(
            configPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(configPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(configPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(graphicSetHigh)
                    .addComponent(graphicSetMid)
                    .addComponent(graphicSetLow))
                .addContainerGap(352, Short.MAX_VALUE))
        );

        AllPanels.addTab("Config", configPanel);

        pcInfo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                pcInfoax(evt);
            }
        });

        pcInfoTextArea.setColumns(20);
        pcInfoTextArea.setRows(5);
        ScrollPane.setViewportView(pcInfoTextArea);

        MainTitle1.setFont(new java.awt.Font("Segoe UI", 3, 18)); // NOI18N
        MainTitle1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        MainTitle1.setText("Pc Info");

        javax.swing.GroupLayout pcInfoLayout = new javax.swing.GroupLayout(pcInfo);
        pcInfo.setLayout(pcInfoLayout);
        pcInfoLayout.setHorizontalGroup(
            pcInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MainTitle1, javax.swing.GroupLayout.DEFAULT_SIZE, 783, Short.MAX_VALUE)
            .addGroup(pcInfoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 579, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pcInfoLayout.setVerticalGroup(
            pcInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pcInfoLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(MainTitle1)
                .addGap(18, 18, 18)
                .addComponent(ScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 293, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(74, Short.MAX_VALUE))
        );

        AllPanels.addTab("Información del Pc", pcInfo);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(AllPanels, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(AllPanels, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        AllPanels.getAccessibleContext().setAccessibleName("userInfo");
    }// </editor-fold>//GEN-END:initComponents

    private void ax(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ax
        // TODO add your handling code here:
    }//GEN-LAST:event_ax

    private void pcInfoax(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pcInfoax
        // TODO add your handling code here:
    }//GEN-LAST:event_pcInfoax

    private void modRouteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modRouteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_modRouteActionPerformed

    private void searchModButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchModButtonActionPerformed
        try {
            JFileChooser fileChooser = new JFileChooser("C://");
            fileChooser.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);
            fileChooser.setDialogTitle("Selecciona la carpeta de mods");
            if (fileChooser.showOpenDialog(this) != JFileChooser.CANCEL_OPTION) {

                modRoute.setText(fileChooser.getSelectedFile().getAbsolutePath());
            }
        } catch (Exception e) {
            popup.errorPopup("Error", e.getMessage());
        }

    }//GEN-LAST:event_searchModButtonActionPerformed

    private void downloadZipModRouteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_downloadZipModRouteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_downloadZipModRouteActionPerformed

    private void searchZipModButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchZipModButtonActionPerformed
        try {
            String route = downloadZipModRoute.getText();
            if (route != "") {
                JFileChooser fileChooser = new JFileChooser(route);
            } else {

            }
            JFileChooser fileChooser = new JFileChooser(route);
            fileChooser.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);
            fileChooser.setDialogTitle("Ruta de descarga del zip");
            if (fileChooser.showOpenDialog(this) != JFileChooser.CANCEL_OPTION) {

                modRoute.setText(fileChooser.getSelectedFile().getAbsolutePath());
            }

        } catch (Exception e) {
            popup.errorPopup("Error", e.getMessage());
        }
    }//GEN-LAST:event_searchZipModButtonActionPerformed

    private void downloadButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_downloadButtonMouseClicked
        RequestGet rget = new RequestGet();
        Popups popup = new Popups();
        ZipManager zipmanager = new ZipManager();
        String appDataPath = System.getenv("APPDATA");
        
        String zipFilePath = appDataPath + "/.minecraft-mod-installer/temp/mods.zip";
        String destDirectory = appDataPath + "/.minecraft/mods/";
        
        Map<String, String> parameters = Map.of(
                "apikey", apikey
        );
        String hasErrors = rget.downloadFile(domain + "/api/minecraft/getmods.php", parameters, zipFilePath);
        if (hasErrors != null){
            popup.errorPopup("Error", hasErrors);
        }
        
        zipmanager.unzip(zipFilePath, destDirectory);
        
    }//GEN-LAST:event_downloadButtonMouseClicked

    private void graphicSetHighActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_graphicSetHighActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_graphicSetHighActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.baker.View.Components.MaterialTabbed AllPanels;
    private javax.swing.JLabel MainTitle;
    private javax.swing.JLabel MainTitle1;
    private javax.swing.JScrollPane ScrollPane;
    private javax.swing.JPanel configPanel;
    private javax.swing.JButton downloadButton;
    private javax.swing.JTextField downloadZipModRoute;
    private javax.swing.ButtonGroup graphicBtnGroup;
    private javax.swing.JRadioButton graphicSetHigh;
    private javax.swing.JRadioButton graphicSetLow;
    private javax.swing.JRadioButton graphicSetMid;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTextField modRoute;
    private javax.swing.JPanel modsPanel;
    private javax.swing.JPanel pcInfo;
    private javax.swing.JTextArea pcInfoTextArea;
    private javax.swing.JProgressBar progressBar;
    private javax.swing.JLabel rutaDescargaLabel;
    private javax.swing.JButton searchModButton;
    private javax.swing.JButton searchZipModButton;
    private javax.swing.JPanel shadersPanel;
    // End of variables declaration//GEN-END:variables
}
